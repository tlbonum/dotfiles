unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g mouse on
set -sg escape-time 0
set -g history-limit 10000
set -g mode-keys vi

set -g base-index 1
setw -g pane-base-index 1

set -g terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "screen-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

set-option -g allow-passthrough on

# split panes using | and -
bind - split-window -h
bind = split-window -v
unbind '"'
unbind %

# unbind -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# vim-like pane resizing
# bind -r C-Up resize-pane -U
# bind -r C-Down resize-pane -D
# bind -r C-Left resize-pane -L
# bind -r C-Right resize-pane -R

# bind -r C-k resize-pane -U
# bind -r C-j resize-pane -D
# bind -r C-h resize-pane -L
# bind -r C-l resize-pane -R
#
# # vim-like pane switching
# bind k select-pane -U
# bind j select-pane -D
# bind h select-pane -L
# bind l select-pane -R
#
# # and now unbind keys
# unbind Up
# unbind Down
# unbind Left
# unbind Right
#
# unbind C-Up
# unbind C-Down
# unbind C-Left
# unbind C-Right

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-open'             # Open links from tmux - Select path and press o
set -g @plugin 'tmux-plugins/tmux-yank'             # Copy to system clipboard
set -g @plugin 'MunifTanjim/tmux-mode-indicator'    # Display current tmux mode
# set -g @plugin 'tmux-plugins/tmux-battery'          # Battery status in tmux
# set -g @plugin 'tmux-plugins/tmux-cpu'              # Display CPU performance
# set -g @plugin 'tmux-plugins/tmux-resurrect'        # Restore tmux sessions

# set -g @plugin 'fcsonline/tmux-thumbs'
# run-shell '~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux'
# set -g @thumbs-key \\

set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha'
# set -g @catppuccin_window_right_separator "█"
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_middle_separator " | "
# set -g @catppuccin_window_default_fill "none"
# set -g @catppuccin_window_current_fill "all"
# set -g @catppuccin_status_modules_right "application session date_time"
# set -g @catppuccin_status_left_separator "█"
# set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_date_time_text "%m-%d %H:%M:%S"

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"
# set -g @catppuccin_window_current_text "#{b:pane_current_path}" # use "#W" for application instead of directory
set -g @catppuccin_status_modules_right "directory session date_time"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"

# bg="#0c0c13"

# set -g @catppuccin_window_current_color "#ffffff"
set -g @catppuccin_window_current_background "#313244"

# set -g @catppuccin_window_current_color "#ffffff"
# set -g @catppuccin_window_current_background "$bg"
#
# set -g @catppuccin_window_default_color "#ffffff"
# set -g @catppuccin_window_default_background "$bg"

run '~/.tmux/plugins/tpm/tpm'

# set -g status-bg "$bg"

set -g status-right '#(gitmux "#{pane_current_path}")'
